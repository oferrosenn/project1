{"version":3,"sources":["C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/$_lazy_route_resource lazy","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/app.component.css","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/app.component.html","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/app.component.ts","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/app.module.ts","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/directives/directive.component.html","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/directives/directive.component.ts","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/home/home.component.html","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/home/home.component.ts","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/interpolation/interpolation.component.html","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/interpolation/interpolation.component.ts","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/navbar/navbar.component.css","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/navbar/navbar.component.html","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/navbar/navbar.component.ts","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/pipes/pipes.component.html","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/pipes/pipes.component.ts","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/pokeapi/pokeapi.component.html","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/pokeapi/pokeapi.component.ts","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/posts/posts.component.html","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/posts/posts.component.ts","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/posts/posts.ts","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/directives/custom.directive.ts","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/pipes/custom.pipe.ts","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/routing.ts","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/services/posts.service.ts","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/environments/environment.ts","C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<nav-bar></nav-bar>\\n<div class=\\\"container-fluid\\\">\\n  <!-- This is the default tag used by the router module and will be used to\\n  inject different views. -->\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root', \n  templateUrl: './app.component.html', \n  styleUrls: ['./app.component.css']\n\n})\n\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { Routes } from '@angular/router';\r\n\r\n//Import all components used by the Angular application here\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { InterpolationComponent } from './components/interpolation/interpolation.component';\r\n//import { TestComponent } from './components/test-output/test.component'\r\nimport { appRoutes } from './routing';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { PokeapiComponent } from './components/pokeapi/pokeapi.component';\r\nimport { DirectiveComponent} from './components/directives/directive.component'\r\nimport { PipesComponent } from './components/pipes/pipes.component';\r\nimport { PostsComponent} from './components/posts/posts.component';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\n//Services\r\nimport { PostsService } from './services/posts.service';\r\n\r\n//Pipes\r\nimport { CustomPipe } from './pipes/custom.pipe';\r\n\r\n//Directives\r\nimport { CustomDirective } from './directives/custom.directive';\r\n@NgModule({\r\n  //Have angular declare all classes to be used\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    InterpolationComponent,\r\n    HomeComponent,\r\n    PokeapiComponent,\r\n    DirectiveComponent,\r\n    PipesComponent,\r\n    PostsComponent,\r\n\r\n    //Pipes\r\n    CustomPipe,\r\n\r\n    //Directives\r\n    CustomDirective\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    HttpClientModule\r\n    \r\n  ],\r\n  /*\r\n    Services typically are classes that supply data a services. \r\n    Therefore, they are considered providers. Any providers brought in\r\n    can be considered singletons since there will ever only be 1 instance\r\n    of each.\r\n    Note: Anything inside the app,module provider sections is visible to the entire\r\n    application. Should you want to only provide the provider to a specific scope more nested into\r\n    the application, then you would have to create an inner module and provide it there.\r\n  */\r\n  providers: [PostsService,\r\n  \r\n    {\r\n        provide: 'externalUrlRedirectResolver',\r\n        useValue: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) =>\r\n        {\r\n            window.location.href = (route.data as any).externalUrl;\r\n        }\r\n    }\r\n],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/app.module.ts","module.exports = \"<div class=\\\"well\\\">\\n    <h1>DIRECTIVES</h1>\\n    <p>Directives are used to provide instruction within the DOM.\\n        <br>They arguably proivde directions for angular within the view of the application. (The html) All directives are provided\\n        by the angular library as well as offering the developer a means to create their own custom directives.\\n    </p>\\n    <!-- Note: Directives are always preceded with ng.\\n        This provides an easy way to identify a directive. -->\\n    <h3>*ngIf</h3>\\n    <p>We can use *ngIf to determine whether or not we should show and element. It serves as a conditional where if it's true,\\n        we show the element, else we hide it.\\n    </p>\\n    <div class=\\\"well\\\" style=\\\"background-color:beige\\\">\\n        <p>Why do some Directives have an '*' before them, and others don't?</p>\\n\\n        <input type=\\\"button\\\" (click)=\\\"toggleAnswer()\\\" [value]=\\\"buttonValue\\\">\\n        <br>\\n        <p *ngIf=\\\"visible;else elseBlock\\\">The * is simply syntactic sugar that points out that the directive in question can be used to change the structure\\n            of the html page. e.g. removing or adding elements.\\n        </p>\\n        <!-- NOTE: ng-template is NOT a directive, but a tag -->\\n        <ng-template #elseBlock>\\n            <p style=\\\"color:red\\\">ELSE BLOCK</p>\\n        </ng-template>\\n    </div>\\n    <h3>ngStyle</h3>\\n    <p>ngStyle is a directive that is used for applying and object \\n        that represents the css of an element. By utilizing this, we \\n        can dynamically style any tag in our html.\\n    </p>\\n    <div class=\\\"well\\\" [ngStyle]=\\\"styleObject\\\">\\n        <p>Text</p>\\n    </div>\\n    <h3>*ngFor</h3>\\n    <p>*ngFor is a tag that can add elements from a list.\\n        We can use it to duplicate whatever element it is in, for each element\\n        in the provided list. (Note: This is a structural directive, just like\\n        *ngIf)\\n    </p>\\n    <table style=\\\"border:3px dotted\\\">\\n        <tr><th>EMPLOYEE NAME</th><th>EMPLOYEE ID</th></tr>\\n        <tr *ngFor=\\\"let x of emps\\\">\\n            <td>{{x.name}}</td>\\n            <td>{{x.id}}</td>\\n        </tr>\\n    </table>\\n    <div custom-directive>\\n        Some practice text\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/directives/directive.component.html\n// module id = ../../../../../src/app/components/directives/directive.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { CustomDirective } from '../../directives/custom.directive';\n\n@Component({\n    selector: 'app-directive',\n    templateUrl: './directive.component.html'\n})\n/*\n    There is a tool called 'Augery' that can be used to \n    analyze and debug Angular applications form the front end.\n*/\nexport class DirectiveComponent{\n    public buttonValue = \"Show Answer\";\n    public visible = false;\n    public toggleAnswer(){\n        this.visible = !this.visible;\n        if(this.visible){\n            this.buttonValue = \"Hide Answer\";\n        }else{\n            this.buttonValue = \"Show Answer\";\n        }\n    }\n    public styleObject = {\n        color:\"red\",\n        //Can use the html version of the key if you use quotes.\n        \"background-color\": \"red\"\n    }\n    public emps = [\n        {name:\"robert\",\n        id:15},\n        {name:\"ryan\",\n        id:2},\n        {name:\"rebecca\",\n        id:31}\n    ]\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/directives/directive.component.ts","module.exports = \"<style>\\n    table{\\n        border: 1px solid black;\\n        width:100%\\n     }\\n     \\n     td{\\n    border: 1px solid black;\\n    text-align: left;\\n    padding: 8px;  \\n    \\n    }\\n    \\n    \\n    th {\\n    border: 1px solid black;\\n    text-align: left;\\n    padding: 8px;\\n    font-size:15px;      \\n    }\\n    </style>\\n<div class=\\\"well\\\">\\n    <h1>Automated Web Testing System</h1>\\n    \\n    <div class=\\\"well\\\">\\n        \\n        <form name=\\\"tests\\\" method=\\\"post\\\" action=\\\"/RunTestNG\\\">\\n           <!--  <form name=\\\"tests\\\" method=\\\"post\\\" action=\\\"file:///C:/Users/Skynet/Desktop/Training/project2/src/main/java/com/revature/controller/RunTestNG\\\">-->\\n        <table>\\n            <thead>\\n              <tr>\\n              <th>User</th>\\n               <th>Overview</th>\\n                <th>Batches</th>\\n                <th>Locations</th>\\n                <th>Curricula</th>\\n                <th>Trainers</th>\\n                <th>Profile</th>\\n                <th>Reports</th>\\n                <th>Settings</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n                <tr>\\n                   <th><input type=\\\"radio\\\" name=\\\"user\\\" id=\\\"vp\\\" value=\\\"1\\\" onchange=\\\"setit()\\\"/>VP<br>\\n                    <input type=\\\"radio\\\" name=\\\"user\\\" id=\\\"trainer\\\" value=\\\"0\\\" onchange=\\\"setit()\\\"/>Trainer</th>\\n                <td><input type=\\\"checkbox\\\" name=\\\"overview\\\" id=\\\"overview\\\" /></td>\\n                <td><input type=\\\"checkbox\\\" name=\\\"batches\\\" id=\\\"batches\\\" /></td>\\n                <td><input type=\\\"checkbox\\\" name=\\\"locations\\\" id=\\\"locations\\\" /></td>\\n                  <td><input type=\\\"checkbox\\\" name=\\\"curricula\\\" id=\\\"curricula\\\" /></td>\\n                    <td><input type=\\\"checkbox\\\" name=\\\"trainers\\\" id=\\\"trainers\\\" /></td>\\n                      <td><input type=\\\"checkbox\\\" name=\\\"profile\\\" id=\\\"profile\\\" disabled/></td>\\n                      <td><input type=\\\"checkbox\\\" name=\\\"reports\\\" id=\\\"reports\\\" /></td>\\n                      <td><input type=\\\"checkbox\\\" name=\\\"settings\\\" id=\\\"settings\\\" /></td>\\n              </tr>\\n              \\n            </tbody>\\n        </table>\\n        <br>\\n        <!--<input type=\\\"button\\\" value=\\\"Run Tests\\\" (click)=\\\"fetchData()\\\">-->\\n        <input type=\\\"submit\\\" value=\\\"Run Tests\\\">\\n        </form>\\n    </div>\\n    \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html'\n})\n\nexport class HomeComponent{\n    \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/home/home.component.ts","module.exports = \"<div class=\\\"well\\\">\\n\\n        <a href =\\\"#/index.html\\\" target=\\\"_blank\\\"> Link to TestNG </a>\\n        <br><br>\\n        <a href =\\\"http://C:\\\\Users\\\\Skynet\\\\Desktop\\\\Training\\\\project2\\\\src\\\\main\\\\webapp\\\\src\\\\app\\\\components\\\\interpolation\\\\index.html\\\" target=\\\"_blank\\\"> Link to TestNG </a>\\n        <br><br>\\n        <a href =\\\"http://C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/interpolation/index.html\\\" target=\\\"_blank\\\"> Link to TestNG </a>\\n\\n        <!-- <iframe src=\\\"C:/Users/Skynet/Desktop/Training/project2/test-output/index.html\\\"></iframe>-->\\n        <!--<iframe src=\\\"https://www.google.com\\\" height=\\\"400px\\\" width=\\\"100%\\\"></iframe>-->\\n   \\n       <!-- <iframe src=\\\"..\\\\posts\\\\posts.component.html\\\" height=\\\"400px\\\" width=\\\"100%\\\"></iframe>-->\\n        <!--<div ng-include src=\\\"'file:///C:/Users/Skynet/Desktop/Training/project2/test-output/index.html'\\\"></div>-->\\n       <!-- <a =\\\"'file:///C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/posts/posts.component.html'\\\"></div>-->\\n   \\n         <!-- <iframe src=\\\"./interpolation.component.html\\\"></iframe>-->\\n   \\n\\n    <!--\\n    <h3>String Interpolation</h3>\\n    <p>Angular uses a concept called data binding.\\n        This boils down to how we can connect our front end (view)\\n        to our backend (components).\\n        Any data in our components needs to have a way to be transferred\\n        to the View (html file).\\n\\n        One way to do this, is to use String interpolation.\\n    </p>\\n    <div>The value of componentVariable is: <b style=\\\"color:red\\\">{{componentVariable}}</b></div>\\n    <p>The above example demonstrated pullting information from the component and displaying\\n        it on the view. String interpolation is essentially and expression langauge, in that,\\n        it can also perform expressions within.\\n    </p>\\n    <div>The value of 2 + 7 = {{2 + 7}} </div>\\n    <div>The author of this site is: {{someObject.author}}</div>\\n    <h3>Property Binding</h3>\\n    <p>Property binding is, yet, another way to bind business to the view.</p>\\n    <p>Buy applying square brackets to a tag attribute, we bind it as a property.</p>\\n    <p>NOTE: ngStyle is a directive provided by angular.</p>\\n    <div [ngStyle]=styleObject (click)=changeStyle()>I am stylized</div>\\n    <p>ngStyle is the property bound to a variable on the backend. In this case, \\n        ngStyle looks for an object that can change the css of whatever element it is applied\\n        to.\\n    </p>\\n    <h3>EVENT BINDING</h3>\\n    <p>Event binding is used to pass information from the view to the component.</p>\\n    <p>Events are designated with parentheticals. -Jeff</p>\\n    <div (click)=\\\"doubleNum()\\\">Click on me to double the number: {{num}}</div>\\n    <h3>Two Way Databinding</h3>\\n    <p>Up to this point, we have only seen, one way databinding. \\n        IE, taking data from the view and passing it to the component.\\n        Or, taking data from the component and passing it to the view.\\n        With two-way binding, we provide a way to not only change data from the component\\n        with interaction on the view, but also represent the changed variable at the view level\\n        as well.\\n    </p>\\n    <div>\\n        <input [(ngModel)]=\\\"input\\\">{{input}}\\n    </div>\\n-->\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/interpolation/interpolation.component.html\n// module id = ../../../../../src/app/components/interpolation/interpolation.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'app-interpolation',\n   templateUrl: './interpolation.component.html'\n   // templateUrl: '../pipes/pipes.component.html'\n    //template: require('./index.html')\n    // templateUrl: './index.html'\n})\n\nexport class InterpolationComponent{\n\n    \n\n    public componentVariable = \"robert\";\n    public someObject = {\n        author: 'My name',\n        age: 78\n    }\n\n    public styleObject = {\n        color: 'blue',\n        fontFamily: 'Comic Sans MS'\n    }\n    //:datatype to enforce a datatype\n    public num:number = 2;\n\n    public doubleNum(){\n        this.num = this.num * 2;\n    }\n\n    public changeStyle(){\n        if(this.styleObject.color == 'blue'){\n            this.styleObject.color = 'red';\n        }\n        else if(this.styleObject.color == 'red'){\n            this.styleObject.color = 'yellow';\n        }\n        else if(this.styleObject.color == 'yellow'){\n            this.styleObject.color = 'green';\n        }\n        else if(this.styleObject.color == 'green'){\n            this.styleObject.color = 'blue';\n        }\n        \n    }\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/interpolation/interpolation.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/navbar/navbar.component.css\n// module id = ../../../../../src/app/components/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"/home\\\">ANGULAR EXAMPLE</a>\\n      </div>\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li><a routerLink=\\\"/home\\\">Home</a></li>\\n        <li><a routerLink=\\\"/interpolation\\\">TestNG Results</a></li>\\n        <li><a routerLink=\\\"/pokeapi\\\">Pokeapi</a></li>\\n        <li><a routerLink=\\\"/directives\\\">Directives</a></li>\\n        <li><a routerLink=\\\"/pipes\\\">Pipes</a></li>\\n        <li><a routerLink=\\\"/posts\\\">Posts</a></li>\\n      </ul>\\n    </div>\\n  </nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/navbar/navbar.component.html\n// module id = ../../../../../src/app/components/navbar/navbar.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'nav-bar',\n    templateUrl: './navbar.component.html',\n    styleUrls:[\n        './navbar.component.css'\n    ]\n})\nexport class NavbarComponent{\n\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/navbar/navbar.component.ts","module.exports = \"<div class=\\\"well\\\">\\n    <h1>PIPES</h1>\\n    <p>In AngularJS there was a feature called filters.\\n        What filters did, was give you a way to modify model data before\\n        it got presented in the view. You would pull data from the controller\\n        and alter it before it got to the view.\\n    </p>\\n    <p>Angular 4 has this feature as well. And it works just like filter,\\n        except we call it 'piping' in angular 4.\\n    </p>\\n    <div *ngFor=\\\"let x of names\\\">\\n        <p>{{x | uppercase}}</p>\\n    </div>\\n    <p>In the above example, we take a collection of names,\\n        and pass it through a pipe that converts the Strings to upper case.\\n    </p>\\n    <p>My Custom pipe incoming!</p>\\n    <div>\\n        <input [(ngModel)]=\\\"alterWords\\\"><br>\\n        {{alterWords | custompipe}}\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/pipes/pipes.component.html\n// module id = ../../../../../src/app/components/pipes/pipes.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { CustomPipe } from '../../pipes/custom.pipe';\n\n\n@Component({\n    selector: 'app-pipe',\n    templateUrl: './pipes.component.html'\n})\n\nexport class PipesComponent{\nalterWords = \"\";\n\n    public names = [ \n        \"robert\",\n        \"roberto\",\n        \"ryanasd\",\n        \"ryann\",\n        \"Jack\",\n        \"Jill\"\n\n    ]\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/pipes/pipes.component.ts","module.exports = \"<div class=\\\"well\\\">\\n    <input [(ngModel)]=\\\"pokeId\\\"><input type=\\\"button\\\" value=\\\"SUBMIT\\\" (click)=\\\"fetchData()\\\">\\n    <table border=\\\"2px\\\">\\n        <tr><th>NAME</th><td>{{pkmn.name}}</td></tr>\\n        <tr><th>ID</th><td>{{pkmn.id}}</td></tr>\\n        <tr><th>WEIGHT</th><td>{{pkmn.weight}}</td></tr>\\n        <tr><th>SPRITE</th><td><img [src]=\\\"pkmn.sprite\\\" (click)=\\\"changePicture()\\\"></td></tr>\\n    </table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/pokeapi/pokeapi.component.html\n// module id = ../../../../../src/app/components/pokeapi/pokeapi.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'; //Bring in our httpClient library\n@Component({\n    selector: 'app-poke',\n    templateUrl: './pokeapi.component.html'\n})\n\nexport class PokeapiComponent{\n    public pokeId;\n    public pkmn = {\n        name: \"\",\n        id: \"\",\n        weight: \"\",\n        sprite: \"\",\n        sprites: [],\n        spriteIndex: 0\n    }\n\n    //Constructor will execute upon instantiation of the class.\n    //We can use a constructor to inject objects from other classes\n    //into our class for use.\n    //In this case, we will inject the HttpClient class\n    constructor(private http: HttpClient){\n\n    }\n    /*\n        Promise Vs Observable\n        \n        Angular uses Observable objects when making asynchronous calls.\n\n        A Promise is a type of object where when a user sends data,\n        we are gaurnateed to get something back. In the case of sending a request,\n        we either get back an object representing the data recieved, or an object\n        representing the error we recieved.\n        Promises can only listen on one event at a time, on top of which, a user\n        cannot cancel the event once started. IE, I cant halt a request sent to \n        a server, I must wait for some kind of response to come back.\n\n        Observables are the same as promises except with more features. Observables\n        send the data back, essentially, as a stream. With that, Observables can\n        provide support for 0-many events at a time. Observable also supports\n        canceling the event.\n    */\n    public fetchData(){\n        this.pkmn.name = \"Pending\";\n        this.pkmn.id = \"Pending\";\n        this.pkmn.weight = \"Pending\";\n        this.pkmn.sprite = \"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\";\n\n        this.pkmn.sprites = [];\n        this.pkmn.spriteIndex = 0;\n \n        //Example of POST\n        /*\n        this.http.post(\"endpoint_url\", {\n                                            key1: \"value\",\n                                            key2: \"value\",\n                                            etc : \"value\"\n                                        }).subscribe(\n                                            PASS => {}, \n                                            FAIL => {})\n*/\n        this.http.get('https://pokeapi.co/api/v2/pokemon/' + this.pokeId + '/').subscribe(\n            data => { //data represents the object of a successful REST request\n                console.log(\"test\");\n                this.pkmn.name = data[\"name\"];\n                this.pkmn.id = data[\"id\"];\n                this.pkmn.weight = data[\"weight\"];\n                \n                let dataSprites = data[\"sprites\"];\n                for(let index in dataSprites){\n                    if(dataSprites[index]!=null){\n                        this.pkmn.sprites.push(dataSprites[index]);\n                        if(index==\"front_default\"){\n                            this.pkmn.sprite = dataSprites[index];\n                            this.pkmn.spriteIndex = this.pkmn.sprites.length-1;\n                        }\n                    }\n                }\n            },\n            err => {\n                this.pkmn.name = \"MissingNo\";\n                this.pkmn.id = \"-1\";\n                this.pkmn.weight = \"What?\";\n                this.pkmn.sprite = \"https://sites.google.com/a/sutamii.com/sutamii-shimeji/_/rsrc/1286733155717/shimeji/missingno.png\";                \n            }\n        )\n    }\n    public changePicture(){\n        let sprites = this.pkmn.sprites;\n        let index = this.pkmn.spriteIndex;\n        if(sprites[index+1]==undefined){\n            this.pkmn.sprite = sprites[0];\n            this.pkmn.spriteIndex = 0;\n        }else{\n            this.pkmn.sprite = sprites[++index];\n            this.pkmn.spriteIndex = index;\n        }\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/pokeapi/pokeapi.component.ts","module.exports = \"<h2>POSTS</h2>\\n<table border = \\\"2px\\\">\\n    <tr>\\n        <th>POST ID</th><th>POST TITLE</th><th>POST CONTENT</th>\\n    </tr>\\n    <tr *ngFor=\\\"let post of posts\\\">\\n        <td>{{post.id}}</td><td>{{post.title}}</td><td>{{post.content}}</td>\\n    </tr>\\n</table>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/posts/posts.component.html\n// module id = ../../../../../src/app/components/posts/posts.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Post } from './post';\nimport { POSTS } from './posts';\nimport { PostsService } from '../../services/posts.service';\n\n@Component({\n    selector: 'app-posts',\n    templateUrl: './posts.component.html'\n})\n\nexport class PostsComponent implements OnInit{\n    posts: Post[];\n\n    /*\n        here, in the constructor, we provide it with a variable container\n        for our service. Angular sees this and chooses to inject an instance\n        of PostsService into this class. No where in the application do \n        we create an instance of PostsComponent with our own input of a \n        PostsService method. Instantiation and injection is all done by \n        angular.\n    */\n    constructor(private postsService: PostsService){\n        \n    }\n\n    ngOnInit(){\n        this.getPosts();\n    }\n\n    getPosts():void {\n        this.postsService.getPosts().subscribe(\n            posts => this.posts = posts\n        );\n        /*\n            Subscribe is a method that makes all of this asynchronous.\n            It waits for the observable to emit data back to it once it has\n            been called. Here it takes a varibale called posts and waits for\n            it to get populated through the emitter. Once it's been populated,\n            we will take the contents (stored in method variable 'posts') and\n            assign them to our local posts variable.\n        */\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/posts/posts.component.ts","import { Post } from './post';\n\nexport const POSTS: Post[] = [\n    {\n        id: 1,\n        title: 'First post!',\n        content: 'Please ignore'\n    },\n    {\n        id: 2,\n        title: 'Found a dog',\n        content: 'named it robert.'\n    },\n    {\n        id: 3,\n        title: 'Silence',\n        content: '.....'\n    },\n    {\n        id: 4,\n        title: 'Cat adn dog pksnd',\n        content: 'I pet them both'\n    },\n    {\n        id: 5,\n        title: 'Some stranger just pet my pets',\n        content: 'Had an affixiation with pksnd...'\n    }\n]\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/components/posts/posts.ts","import { Directive, ElementRef, AfterViewInit } from '@angular/core';\n\n@Directive({\n    //Use brackets on selector to indicate it will be used as a property for\n    //an element, and not just as the direct element name.\n    selector: '[custom-directive]'\n})\n\nexport class CustomDirective implements AfterViewInit{\n    constructor(private el: ElementRef){\n\n    }\n    ngAfterViewInit(): void{\n        this.el.nativeElement.style.background=\"red\";//=\"'background-color':red\";\n    }\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/directives/custom.directive.ts","import { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'custompipe'\n})\n@Injectable()\nexport class CustomPipe implements PipeTransform{\n    transform(input:string):string{\n        let x = \"\";\n\n        let count = 0;\n        for(let letter of input){\n            count++;\n            if(!(count%3)){\n                x += letter.toUpperCase();\n            }else{\n                x += letter;\n            }\n            \n        }\n\n        return x;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/pipes/custom.pipe.ts","import { Routes } from '@angular/router';\n//To create routes, we will use the Routes class from angulars router library\n\n//Import every component you want to inject via routing\nimport { InterpolationComponent } from './components/interpolation/interpolation.component'\nimport { HomeComponent } from './components/home/home.component';\nimport { PokeapiComponent } from './components/pokeapi/pokeapi.component';\nimport { DirectiveComponent } from './components/directives/directive.component';\nimport { PipesComponent } from './components/pipes/pipes.component';\nimport { PostsComponent} from './components/posts/posts.component';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\n//Here we create the different inject mappings for our routes\nexport const appRoutes: Routes = [\n    {\n        path: 'interpolation', //The url that will trigger the injection\n        component: InterpolationComponent, //the component to be injected.\n        resolve: {\n            url: 'externalUrlRedirectResolver'\n        },\n        data: {\n            externalUrl: 'http://www.google.com'\n        }\n    },\n    {\n        path: 'home', //The url that will trigger the injection\n        component: HomeComponent //the component to be injected.\n    },\n    {\n        path: 'pokeapi', //The url that will trigger the injection\n        component: PokeapiComponent //the component to be injected.\n    },\n    {\n        path: 'directives', //The url that will trigger the injection\n        component: DirectiveComponent //the component to be injected.\n    },\n    {\n        path: 'pipes', //The url that will trigger the injection\n        component: PipesComponent //the component to be injected.\n    },\n    {\n        path: 'posts', //The url that will trigger the injection\n        component: PostsComponent //the component to be injected.\n    },\n    {\n        path: '',\n        redirectTo: '/home',\n        pathMatch: 'full'\n    },\n    {   //We can setup a url path to be used in situations where one is not found.\n        path: '**', \n        component: HomeComponent \n    },\n]\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/routing.ts","import { Injectable } from '@angular/core';\nimport { POSTS } from '../components/posts/posts';\nimport { Post } from '../components/posts/post';\nimport { Observable } from 'rxjs/observable';\nimport { of } from 'rxjs/observable/of';\n\n/*\n    The injectable decarator marks this class as one that may have injected\n    dependencies elsewhere.\n    It is a matter of convention and safety to inclde it for all service classes.\n*/\n@Injectable()\nexport class PostsService{\n    constructor(){\n\n    }\n\n    /*\n        Using Observables we can create asynchronous retrievals of data\n        since Observables work in a manner where a request is taken and then awaits\n        a function to be called that provides the requested content or\n        an object representing an error. Either way, this callback allows us\n        to be asynchronous.\n    */\n    getPosts(): Observable<Post[]>{\n        /*\n            The 'of' method returns an observable of a collection of Posts.\n            Think of it as a sort of stream of data that has callback\n            functionality.\n        */\n        return of(POSTS);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/app/services/posts.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Skynet/Desktop/Training/project2/src/main/webapp/src/main.ts"],"sourceRoot":"webpack:///"}